{
  "name": "Deva Core Configuration",
  "describe": "The Deva Core Configuraitno File contains all the values needed to run deva.world core.",
  "copyright": "Copyright (c) Quinn Michaels. All rights reserved.",
  "DATA": {
    "cmdChr": "/",
    "askChr": "#",
    "inherit": ["events", "lib", "config"],
    "bind": [
      "listeners",
      "methods",
      "func",
      "lib",
      "_agent"
    ],
    "events": {
      "prompt": "devacore:prompt",
      "error": "devacore:error",
      "question": "devacore:question",
      "answer": "devacore:answer",
      "state": "devacore:state",
      "zone": "devacore:zone",
      "action": "devacore:action",
      "feature": "devacore:feature",
      "load": "devacore:load",
      "unload": "devacore:unload",
      "context": "devacore:context"
    },
    "state": "offline",
    "states": {
        "ask": "asking another",
        "question": "asked a question",
        "answer": "gave an answer",
        "offline": "offline",
        "online": "online",
        "init": "initializing",
        "start": "starting",
        "enter": "entering deva.world",
        "stop": "stopping",
        "exit": "exiting deva.world",
        "load": "loading",
        "unload": "unloading",
        "done": "done state",
        "finish": "finish state",
        "invalid": "invalid state",
        "error": "error state",
        "help": "help state"
    },
    "zone": false,
    "zones": {
      "deva": "Deva Zone",
      "config": "Configuration Zone",
      "features": "Feature Zone",
      "idle": "Idle Zone",
      "training": "Training Zone",
      "school": "School Zone",
      "work": "Work Zone",
      "fun": "Fun Zone",
      "adventure": "Adventure Zone",
      "party": "Party Zone",
      "invalid": "Invalid Invalid",
      "done": "Done Zone",
      "error": "Error Zone",
      "help": "Help Zone"
    },
    "action": false,
    "actions": {
      "wait": "::agent.name:: is waiting",
      "help": "::agent.name:: giving help",
      "start": "::agent.name:: has started",
      "enter": "::agent.name:: has entered deva.world",
      "exit": "::agent.name:: has exited deva.world",
      "stop": "::agent.name:: is stopped",
      "load": "::agent.name:: is loaded",
      "unload": "::agent.name:: is unloaded",
      "question": "::agent.name:: was received a question",
      "context": "::agent.name:: context change",
      "question_ask": "::agent.name:: was asked a question",
      "question_ask_answer": "::agent.name:: answered the question that was asked",
      "question_cmd": "::agent.name:: processed a command",
      "question_method": "::agent.name:: processed a method",
      "question_talk": "::agent.name:: broadcasted the question",
      "question_answer": "::agent.name:: has answered the question",
      "question_done": "::agent.name:: is done with the question",
      "answer": "::agent.name:: has given an answer",
      "answer_talk": "::agent.name:: broadcasted the answer",
      "ask": "::agent.name:: is being asked a question",
      "ask_answer": "::agent.name:: is answering the question that was asked",
      "status": "::agent.name:: returned their status",
      "get-today": "::agent.name:: getting the value of today",
      "format-date": "::agent.name:: format date",
      "format-time": "::agent.name:: format time",
      "format-currency": "::agent.name:: format currency",
      "format-percent": "::agent.name:: format percent",
      "trimmer": "::agent.name:: is trimming a word count",
      "dupes": "::agent.name:: is removing duplicates",
      "security": "SECURITY",
      "support": "SUPPORT",
      "systems": "SYSTMS",
      "services": "SERVICES",
      "solutions": "SOLUTIONS",
      "research": "RESEARCH",
      "development": "DEVELOPMENT",
      "business": "BUSINESS",
      "legal": "LEGAL",
      "assistant": "ASSISTANT",
      "artist": "ARTIST",
      "mind": "MIND",
      "Client": "::agent.name:: configure #client",
      "Security": "::agent.name:: configure #security",
      "Support": "::agent.name:: configure #support",
      "Systems": "::agent.name:: configure #systems",
      "Services": "::agent.name:: ocnfigure #services",
      "Solutions": "::agent.name:: configure #solutions",
      "Research": "::agent.name:: configure #research",
      "Development": "::agent.name:: configure #development",
      "Legal": "::agent.name:: configure #legal",
      "Business": "::agent.name:: configure #business",
      "Assistant": "::agent.name:: configure #assistant",
      "Artist": "::agent.name:: configure #artist",
      "Mind": "::agent.name:: configure #mind",
      "Done": "::agent.name:: configure #done",
      "invalid": "::agent.name:: invalid",
      "states": "::agent.name:: getting states",
      "actions": "::agent.name:: getting actions",
      "zones": "::agent.name:: getting zones",
      "features": "::agent.name:: Getting features",
      "contexs": "::agent.name:: Getting contexts",
      "finish": "::agent.name:: finished"
    },
    "feature": false,
    "features": {
      "security": "Security",
      "support": "Support",
      "services": "Services",
      "solutions": "Solutions",
      "systems": "Systems",
      "research": "Research",
      "development": "Development",
      "business": "Business",
      "legal": "Legal",
      "assistant": "Assistant",
      "artist": "Artist",
      "mind": "Mind"
    },
    "message": "offline",
    "messages": {
      "states": {
        "offline": "::agent.name:: is offline",
        "online": "::agent.name:: is online",
        "ask": "::agent.name:: asked a question",
        "question": "::agent.name:: received a question",
        "answer": "::agent.name:: answered the question",
        "init": "::agent.name:: is initializing",
        "start": "::agent.name:: is starting",
        "enter": "::agent.name:: has entered deva.world",
        "stop": "::agent.name:: is stopping",
        "exit": "::agent.name:: has exited deva.world",
        "load": "::agent.name:: is loading",
        "unload": "::agent.name:: is is unloading",
        "invalid": "::agent.name:: seems to be invalid",
        "finish": "::agent.name:: finish state",
        "done": "::agent.name:: is done",
        "error": "::agent.name:: appears to have had an error",
        "help": "::agent.name:: is getting help"
      },
      "zones": {
        "deva": "::agent.name:: is in the Deva Zone",
        "config": "::agent.name:: is in the Config Zone",
        "features": "::agent.name:: is in the Features Zone",
        "idle": "::agent.name:: is in the Idle Zone",
        "training": "::agent.name:: is in the Training Zone",
        "school": "::agent.name:: is in the School Zone",
        "work": "::agent.name:: is in the Work Zone",
        "danger": "::agent.name:: is in the Danger Zone",
        "invalid": "::agent.name:: is in the Invalid Zone",
        "done": "::agent.name:: is in the Done Zone",
        "error": "::agent.name:: is in the Error Zone",
        "help": "::agent.name:: is in the Help Zone"
      },
      "actions": {
        "wait": "::agent.name:: is waiting",
        "start": "::agent.name:: has started",
        "enter": "::agent.name:: has entered deva.world",
        "exit": "::agent.name:: has exited deva.world",
        "stop": "::agent.name:: is stopped",
        "load": "::agent.name:: is loaded",
        "unload": "::agent.name:: is unloaded",
        "question": "::agent.name:: received a question",
        "question_ask": "::agent.name:: is asking another Deva",
        "question_ask_answer": "::agent.name:: answered what they were asked",
        "question_cmd": "::agent.name:: is running a command",
        "question_method": "::agent.name:: is running a method",
        "question_talk": "::agent.name:: is broadcasting the question",
        "question_answer": "::agent.name:: answered the question",
        "question_done": "::agent.name:: the question is done",
        "answer": "::agent.name:: is generating an answer",
        "answer_talk": "::agent.name:: is talking an answer",
        "ask": "::agent.name:: is asking a question",
        "ask_answer": "::agent.name:: is answering a question",

        "security": "::agent.name:: is accessing the #security feature",
        "Security": "::agent.name:: is loading the Security Feature",
        "support": "::agent.name:: is accessing the #support feature",
        "Support": "::agent.name:: is loading the Support Feature",
        "services": "::agent.name:: is accessing the #services feature",
        "Services": "::agent.name:: is loading the Services Feature",
        "solutions": "::agent.name:: is accessing the #services feature",
        "Solutions": "::agent.name:: is loading the Services Feature",
        "systems": "::agent.name:: is accing #systems",
        "Systems": "::agent.name:: is loading the Systems Feature",
        "research": "::agent.name:: is accessing the #research feature",
        "Research": "::agent.name:: is loading the Research Feature",
        "development": "::agent.name:: is accessing the #development feature",
        "Development": "::agent.name:: is loading the Development Feature",
        "business": "::agent.name:: is accessing the #business feature",
        "Business": "::agent.name:: is loading the Business Feature",
        "legal": "::agent.name:: is accessing the #legal feature",
        "Legal": "::agent.name:: is loading the Legal Feature",
        "assistant": "::agent.name:: is accessing the #assistant feature",
        "Assistant": "::agent.name:: is loading the Assistant Feature",
        "artist": "::agent.name:: is accessing the #artist feature",
        "Artist": "::agent.name:: is loading the Artist Feature",
        "mind": "::agent.name:: is accessing the #mind feature",
        "Mind": "::agent.name:: is loading the Mind Feature",
        "client_data": "::agent.name:: configure",
        "invalid": "::agent.name:: invalid",
        "finish": "::agent.name:: has finished the action",
        "done": "::agent.name:: done",
        "error": "::agent.name:: error",
        "help": "::agent.name:: providing help",
        "states": "::agent.name:: is listing the states",
        "actions": "::agent.name:: is listing the actions",
        "zones": "::agent.name:: is listing the zones",
        "features": "::agent.name:: is listing the features",
        "contexts": "::agent.name:: is listing the contexts"
      },
      "features": {
        "security": "::agent.name:: accessing #security feature",
        "Security": "Security configure",
        "support": "::agent.name:: accessing #support feature",
        "Support": "Support configure",
        "services": "::agent.name:: accessing #services feature",
        "Services": "Services configure",
        "solutions": "solutions feature",
        "Solutions": "Solutions configure",
        "systems": "systems feature",
        "Systems": "Systems configure",
        "research": "research feature",
        "Research": "Research configure",
        "development": "development feature",
        "Development": "Development configure",
        "business": "business feature",
        "Business": "Business configure",
        "legal": "legal feature",
        "Legal": "Legal configure",
        "assistant": "assistant feature",
        "Assistant": "Assistant configure",
        "artist": "artist feature",
        "Artist": "Artist configure",
        "mind": "mind feature",
        "Mind": "Mind configure",
        "invalid": "feature invalid",
        "done": "feature done",
        "error": "feature error"
      }
    }
  }
}
